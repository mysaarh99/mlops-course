name: MLOps CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-train-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ سحب الكود
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ إعداد Python
      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      # 3️⃣ Cache pip
      - name: 📦 Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      # 4️⃣ تثبيت المتطلبات
      - name: 📚 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install dvc-ssh

      # 5️⃣ إضافة مفتاح SSH الخاص بـ DVC
      - name: 🔑 Add SSH key for DVC
        uses: webfactory/ssh-agent@v0.9.0
        with:
          ssh-private-key: ${{ secrets.DVC_SSH_KEY }}

      # 6️⃣ إضافة السيرفر إلى known_hosts
      - name: 🧩 Add server to known hosts
        run: |
          mkdir -p ~/.ssh
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts

      # 7️⃣ اختبار اتصال SSH مع السيرفر
      - name: 🧪 Test SSH connection
        run: ssh -o StrictHostKeyChecking=yes ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "echo ok"

      # 8️⃣ إزالة أي إعداد سابق لملف مفتاح DVC
      - name: 🚫 Unset keyfile if present
        run: |
          dvc config --unset "remote.origin.keyfile" || true

      # 9️⃣ تسجيل الدخول إلى W&B
      - name: 🔑 Login to W&B
        run: wandb login ${{ secrets.WANDB_API_KEY }}

      # 🔟 سحب البيانات من DVC
      - name: 📥 DVC pull data
        run: dvc pull

      # 1️⃣1️⃣ إعادة إنتاج البايبلاين
      - name: ⚙️ Reproduce pipeline with DVC
        run: dvc repro

      # 1️⃣2️⃣ تسجيل الدخول إلى Docker Hub
      - name: 🔑 Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      # 1️⃣3️⃣ إعداد Docker Buildx
      - name: 🛠️ Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 1️⃣4️⃣ إنشاء tag زمني
      - name: 🏷️ Generate Docker image tag
        id: tagger
        run: echo "tag=$(date +'%Y%m%d%H%M%S')" >> $GITHUB_OUTPUT

      # 1️⃣5️⃣ بناء ورفع صورة Docker
      - name: 🐳 Build and Push Docker Image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/mlops-api:latest
            ${{ secrets.DOCKER_HUB_USERNAME }}/mlops-api:${{ steps.tagger.outputs.tag }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      # 1️⃣6️⃣ نشر التطبيق وتشغيله على السيرفر + Health Check
      - name: 🚀 Deploy to server (docker run + health check)
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          script: |
            set -e
            IMAGE="${{ secrets.DOCKER_HUB_USERNAME }}/mlops-api:latest"

            # تسجيل الدخول إذا الصورة خاصة
            echo "${{ secrets.DOCKER_HUB_TOKEN }}" | docker login -u "${{ secrets.DOCKER_HUB_USERNAME }}" --password-stdin

            docker pull "$IMAGE"
            docker stop mlops-api || true
            docker rm mlops-api || true

            docker run -d --name mlops-api \
              -p 80:8000 \
              --restart=always \
              -e WANDB_API_KEY=${{ secrets.WANDB_API_KEY }} \
              "$IMAGE"

            echo "⏳ Waiting for API to start..."
            for i in {1..10}; do
              if curl -sSf http://localhost:80/docs > /dev/null; then
                echo "✅ API is up and running"
                exit 0
              fi
              echo "Retrying in 3s..."
              sleep 3
            done

            echo "❌ API did not start in expected time"
            docker logs mlops-api
            exit 1.2

      # 1️⃣7️⃣ ملخص التنفيذ
      - name: 📜 Summary
        if: always()
        run: |
          echo "## ✅ Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Docker images pushed:" >> $GITHUB_STEP_SUMMARY
          echo "  * latest" >> $GITHUB_STEP_SUMMARY
          echo "  * ${{ steps.tagger.outputs.tag }}" >> $GITHUB_STEP_SUMMARY

